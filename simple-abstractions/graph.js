// let dists = [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9], [10, 1], [11, 2], [12, 3], [13, 4], [14, 5], [15, 6], [16, 7], [17, 8], [18, 9], [19, 10], [20, 2], [21, 3], [22, 4], [23, 5], [24, 6], [25, 7], [26, 8], [27, 9], [28, 10], [29, 11], [30, 3], [31, 4], [32, 5], [33, 6], [34, 7], [35, 8], [36, 9], [37, 10], [38, 11], [39, 12], [40, 4], [41, 5], [42, 6], [43, 7], [44, 8], [45, 9], [46, 10], [47, 11], [48, 12], [49, 13], [50, 5], [51, 6], [52, 7], [53, 8], [54, 9], [55, 10], [56, 11], [57, 12], [58, 13], [59, 14], [60, 6], [61, 7], [62, 8], [63, 9], [64, 10], [65, 11], [66, 12], [67, 13], [68, 14], [69, 15], [70, 7], [71, 8], [72, 9], [73, 10], [74, 11], [75, 12], [76, 13], [77, 14], [78, 15], [79, 16], [80, 8], [81, 9], [82, 10], [83, 11], [84, 12], [85, 13], [86, 14], [87, 15], [88, 16], [89, 17], [90, 9], [91, 10], [92, 11], [93, 12], [94, 13], [95, 14], [96, 15], [97, 16], [98, 17], [99, 18]]
// let dists = [[0, 0], [1, 2], [2, 7], [3, 17], [4, 26], [5, 34], [6, 44], [7, 46], [8, 53], [9, 57], [10, 9], [11, 18], [12, 22], [13, 23], [14, 31], [15, 37], [16, 43], [17, 50], [18, 60], [19, 68], [20, 16], [21, 23], [22, 32], [23, 37], [24, 41], [25, 49], [26, 59], [27, 65], [28, 70], [29, 79], [30, 21], [31, 31], [32, 38], [33, 39], [34, 48], [35, 54], [36, 61], [37, 63], [38, 67], [39, 74], [40, 29], [41, 35], [42, 43], [43, 51], [44, 59], [45, 60], [46, 70], [47, 72], [48, 75], [49, 82], [50, 35], [51, 39], [52, 53], [53, 60], [54, 70], [55, 75], [56, 78], [57, 81], [58, 85], [59, 94], [60, 44], [61, 40], [62, 63], [63, 66], [64, 76], [65, 83], [66, 90], [67, 94], [68, 100], [69, 103], [70, 51], [71, 45], [72, 71], [73, 80], [74, 81], [75, 83], [76, 88], [77, 93], [78, 99], [79, 106], [80, 57], [81, 49], [82, 76], [83, 82], [84, 83], [85, 92], [86, 94], [87, 97], [88, 105], [89, 112], [90, 60], [91, 55], [92, 84], [93, 85], [94, 88], [95, 90], [96, 91], [97, 100], [98, 108], [99, 112]]
// let dists = [[0, 0], [10, 1], [20, 2], [30, 3], [40, 4], [50, 5], [51, 6], [52, 7], [53, 8], [54, 9], [55, 10], [56, 11], [57, 12], [58, 13], [59, 14], [60, 6], [61, 7], [62, 8], [63, 9], [64, 10], [65, 11], [66, 12], [67, 13], [68, 14], [69, 15], [70, 7], [71, 8], [72, 9], [73, 10], [74, 11], [75, 12], [76, 13], [77, 14], [78, 15], [79, 16], [80, 8], [81, 9], [82, 10], [83, 11], [84, 12], [85, 13], [86, 14], [87, 15], [88, 16], [89, 17], [90, 9], [91, 10], [92, 11], [93, 12], [94, 13], [95, 14], [96, 15], [97, 16], [98, 17], [99, 18]]
// let dists = [[0, 0], [1, 1], [2, 2], [3, 3], [4, 1], [5, 2], [6, 3], [7, 4], [8, 2], [9, 3], [10, 4], [11, 5], [12, 3], [13, 4], [14, 5], [15, 6]]
// let dists = [[0, 0], [1, 13], [2, 10], [3, 9], [4, 1], [5, 2], [6, 9], [7, 8], [8, 2], [9, 3], [10, 6], [11, 7], [12, 3], [13, 4], [14, 5], [15, 6]]
// let dists = [[0, 0], [1, 1], [2, 8], [3, 7], [4, 1], [5, 2], [6, 5], [7, 6], [8, 2], [9, 3], [10, 4], [11, 5], [13, 4]]
// let dists = [[0, 0], [1, 1], [2, 10], [3, 9], [4, 1], [5, 2], [6, 9], [7, 8], [8, 2], [9, 3], [10, 6], [11, 7], [12, 3], [13, 4], [14, 5], [15, 6]]
// let dists = [[0, 0], [1, 13], [2, 10], [3, 9], [4, 1], [5, 2], [6, 9], [7, 8], [8, 2], [9, 3], [10, 6], [11, 7], [12, 3], [13, 4], [14, 5], [15, 6]]
let dists = [[0, 0], [1, 1], [2, 10], [3, 9], [4, 1], [5, 2], [6, 7], [7, 8], [8, 2], [9, 3], [10, 4], [11, 7], [12, 3], [13, 4], [14, 5], [15, 8]]


let d_max = (() => {
  var d_max = 0
  dists.forEach(dist => {
    d_max = Math.max(d_max, dist[1])
  })
  return d_max + 1
})()

function getNode(n, v) {
  n = document.createElementNS("http://www.w3.org/2000/svg", n);
  for (var p in v)
    n.setAttributeNS(null, p.replace(/[A-Z]/g, function (m, p, o, s) { return "-" + m.toLowerCase(); }), v[p]);
  return n
}

// interpolate(n, max) / base = n / max
// interpolate(n, max) <= base
function interpolate(n, max, base) {
  return Math.floor(n / max * base)
}

function drawDijkstraGridResult(container) {

  // var svg = document.createElement("svg")
  // svg.setAttribute("width", (400).toString())
  // svg.setAttribute("height", (400).toString())

  let size = 600

  let svg = getNode("svg", {
    width: size.toString(),
    height: size.toString()
  })

  let n = 4
  let mult = size / n
  let padding = 0

  dists.forEach(dist => {
    let node = dist[0]
    let i = node % n
    let j = Math.floor(node / n)
    let x = Math.floor(i * mult + padding * mult / 10)
    let y = Math.floor(j * mult + padding * mult / 10)
    // console.log(i, j)
    let d = dist[1]
    let h = (15 - interpolate(d, d_max, 12)).toString(16)
    let rect = getNode("rect", {
      x: x,
      y: y,
      width: Math.floor((10 - 2 * padding) * mult / 10),
      height: Math.floor((10 - 2 * padding) * mult / 10),
      fill: "#" + h + h + "00" + h + h
    })
    svg.appendChild(rect)

    let text = getNode("text", {
      x: x + 50,
      y: y + mult - 50,
      fill: "green",
      "font-size": "50px"
    })
    text.innerHTML = node.toString()
    svg.appendChild(text)

  })

  container.appendChild(svg)
}